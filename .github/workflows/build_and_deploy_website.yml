name: build_and_deploy_website
on:
  push:
    branches: 
      - main
    paths:
      - 'JekyllSite/**'
      - '.github/workflows/build_and_deploy_website.yml'
      - '.infrastructure/**'
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  build_frontend:
    name: Build Website
    runs-on: ubuntu-latest
    steps:
      # Checkout Code
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: JekyllSite/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('JekyllSite/**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: build site
        uses: helaili/jekyll-action@v2
        with:
          build_only: true
          jekyll_src: JekyllSite
          target_path: _site
      # Get Node for CDK
      - name: get node
        uses: actions/setup-node@v2
        with:
          node-version: "16.13.1"      
      # install infrastructure
      - uses: actions/cache@v2
        id: cdk-install
        with:
          path: ./.infrastructure/node_modules
          key: ${{ runner.os }}-${{ hashFiles('./.infrastructure/package.json') }}-${{ hashFiles('./.infrastructure/package-lock.json') }}
      - name: install cdk
        if: steps.cdk-install.outputs.cache-hit != 'true'
        working-directory: ./.infrastructure
        run: npm ci
      # deploy cdk
      - name: deploy cdk
        working-directory: ./.infrastructure
        run: npm run cdk deploy
      # clear cloudfront
      - name: clear cloudfront
        working-directory: ./.infrastructure
        run: |
          export distributionId=$(aws --region us-east-1 cloudformation describe-stacks --stack-name LeeMartinCoUk | jq -r '.Stacks | .[] | .Outputs | .[] | select(.OutputKey=="frontendCloudfrontDistributionId").OutputValue')
          aws cloudfront create-invalidation --distribution-id $distributionId --paths "/*"
